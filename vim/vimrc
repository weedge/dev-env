execute pathogen#infect()
set nocompatible              " Prefents VIM from being nerfed into acting like VI

" =========================================^^==================================================

"------  Behavior  ------
set viminfo='1000,f1,:1000,/1000
set history=500

set autoread " Set autoread when a file is changed outside
set autowrite " Write on make/shell commands

" Source the vimrc file after saving it
" autocmd BufWritePost .vimrc source $MYVIMRC
set modeline " Turn on modeline
set encoding=utf8 " Set utf-8 encoding
set termencoding=utf8
set fencs=utf8,gbk,gb2312,gb18030,cp936
set completeopt+=longest " Optimize auto complete
set completeopt-=preview " Optimize auto complete
set maxmempattern=2000  " Maximum amount of memory (in Kbyte) to use for pattern matching. The maximum value is about 2000000.  Use this to work without a limit.

"set expandtab         "Use spaces instead of tabs
""Ignore these files when completing names
set wildignore=.svn,CVS,.git,*.o,*.a,*.class,*.mo,*.la,*.so,*.obj,*.swp,*.jpg,*.png,*.xpm,*.gif,node_modules/*

set backup " Set backup
"set undofile " Set undo

colorscheme desert
set tabstop=4               "tab = 4 spaces
set shiftwidth=4            "Indent to four spaces
set hidden                  "Switch between unsaved buffers w/o needing to save, preserves history
filetype indent on          "Syntax Highlight
filetype plugin on          "Needed for snipMate
set autoindent              "Autoindent
set cursorline              "Highlight background of current line

" ------- Set Keyboard -------
let mapleader=","           "Changes Leader key into a comma instead of a backslash
let maplocalleader='\'      "Changes the maplocalleader

nnoremap <Leader>vv :set mouse=v<CR>
nnoremap <Leader>aa :set mouse=a<CR>
" Fast edit the .vimrc file using ',x'
nnoremap <Leader>x :tabedit $MYVIMRC<CR>
" Fast edit the todo list file using ',d'
nnoremap <Leader>d :tabedit $HOME/todo_list<CR>
" nnoremap <Leader>th :tabedit /etc/hosts<CR>
nnoremap <Leader>nn :tabn<CR>
nnoremap <Leader>pp :tabp<CR>
nnoremap <Leader>tt :tabnew<CR>

"-------- Golang Set -----------------------
" see this https://github.com/fatih/vim-go-tutorial to set
" :GoInstallBinaries install go binaries(export GOPATH=$HOME/go)
let g:go_version_warning = 0
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_disable_autoinstall = 0
autocmd FileType go nmap <Leader>gc <Plug>(go-coverage-toggle)
autocmd FileType go nmap <Leader>gr :GoRun<CR>
autocmd FileType go nmap <Leader>gt :GoTest<CR>
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
let g:tagbar_type_go = {
	\ 'ctagstype' : 'go',
	\ 'kinds'     : [
	\ 'p:package',
	\ 'i:imports:1',
	\ 'c:constants',
	\ 'v:variables',
	\ 't:types',
	\ 'n:interfaces',
	\ 'w:fields',
	\ 'e:embedded',
	\ 'm:methods',
	\ 'r:constructor',
	\ 'f:functions'
	\ ],
	\ 'sro' : '.',
	\ 'kind2scope' : {
	\ 't' : 'ctype',
	\ 'n' : 'ntype'
	\ },
	\ 'scope2kind' : {
	\ 'ctype' : 't',
	\ 'ntype' : 'n'
	\ },
	\ 'ctagsbin'  : 'gotags',
	\ 'ctagsargs' : '-sort -silent'
\ }

"--------TagbarToggle set ---------------------
nmap <F8> :TagbarToggle<CR>
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"


"------  Visual Options  -------------------
set guioptions=egmt         "remove toolbar, scrollbars
syntax on                   "Enables syntax highlighting
set nu                      "Enable Line Numbers
set wrap                    "Enable word wrap
set vb                      "Visual bell instead of beeps
set ruler                   "Displays cursor position on bottom right of screen
set statusline=%<%f\ %h%m%r%=%{fugitive#statusline()}\ \ %-14.(%l,%c%V%)\ %P
let g:buftabs_only_basename=1
let g:buftabs_marker_modified = "+"

" 插入时间
imap <silent> <C-D><C-D> <C-R>=strftime("%Y-%b-%e")<CR>
imap <silent> <C-T><C-T> <C-R>=strftime("%l:%M %p")<CR>


"------  Searching  ------
set incsearch               "Search while typing
set ignorecase              "Case Insensitive Searching
set smartcase               "Lowercase = case insensitive, any uppercase =
set hlsearch                "Highlight all search results
"Following line clears the search highlights when pressing Lb
nnoremap <leader>b :nohlsearch<CR>

"------  Replacing ------
"type S, then type what you're looking for, a /, and what to replace it with
nmap S :%s//g<LEFT><LEFT>
vmap S :s//g<LEFT><LEFT>

"------  NERDTree Options  ------
let NERDTreeIgnore=['CVS','\.dSYM$']
let NERDTreeChDirMode=2     "setting root dir in NT also sets VIM's cd
noremap <silent> <Leader>n :NERDTreeToggle<CR>
" These prevent accidentally loading files while in the NERDTree panel
autocmd FileType nerdtree noremap <buffer> <c-left> <nop>
autocmd FileType nerdtree noremap <buffer> <c-h> <nop>
autocmd FileType nerdtree noremap <buffer> <c-right> <nop>
autocmd FileType nerdtree noremap <buffer> <c-l> <nop>


"------  Buffers  ------
" Ctrl Left & Right move between buffers
noremap <silent> <C-left> :bprev<CR>
noremap <silent> <C-h> :bprev<CR>
noremap <silent> <C-right> :bnext<CR>
noremap <silent> <C-l> :bnext<CR>
" Closes the current buffer
nnoremap <silent> <Leader>q :bd<CR>

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! %!sudo tee > /dev/null %

" Closes the current window
nnoremap <silent> <Leader>Q <C-w>c

"------  Fugitive for Git  ------
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gl :Glog<CR>
nnoremap <Leader>gb :Gblame<CR>
nnoremap <Leader>gm :Gmove
nnoremap <Leader>gp :Ggrep
nnoremap <Leader>gR :Gread<CR>
nnoremap <Leader>gg :Git
nnoremap <Leader>gd :Gdiff<CR>


"------ Colors  need some color vim file in colors dir -------
nnoremap <silent>\k :colorscheme delek<CR>
nnoremap <silent>\d :colorscheme desert<CR>
nnoremap <silent>\j :colorscheme jellybeans<CR>
nnoremap <silent>\b :colorscheme darkblue<CR>
nnoremap <silent>\m :colorscheme molokai<CR>
nnoremap <silent>\s :colorscheme solarized<CR>
nnoremap <silent>\i :colorscheme ir_black<CR>
let g:molokai_original = 1
let g:rehash256 = 1



"------ Author -------------
let g:startify_list_order = ['files', 'dir', 'bookmarks', 'sessions']
let g:startify_custom_header = [
            \"       ./\   _                  ",
            \"  c ..'D> `'//...........'`.    ",
            \"  :        //            :`     ",
            \"  :       //             :      ",
            \"  '..... // mini-dog-vim :      ",
            \"   ^^^^^``:              ;      ",
            \"          :             .'      ",
            \"          : :':'''''':`: `. jgs ",
            \"          ''''``      ``'''     ",
            \]

let g:startify_custom_footer = "This configuration is maintained by wuyong(weedge@163.com). Thanks!"



